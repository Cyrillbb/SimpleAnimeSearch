{"version":3,"sources":["serviceWorker.js","constants.js","actions/actions.js","reducers/Fetcher.js","reducers/Favorite.js","reducers/CategoriesFetcher.js","reducers/TitleFetcher.js","reducers/rootReducer.js","utility.js","Components/ButtonBar/ButtonBar.jsx","Components/List/AnimeCard.jsx","Components/List/AnimeList.jsx","Components/List/FavoritesList.jsx","Components/Header.jsx","Components/List/Categories.jsx","Components/Title.jsx","Components/Main.jsx","index.js"],"names":["Boolean","window","location","hostname","match","queryParts","apiEND","fetchHeader","method","headers","getAnime","query","url","dispatch","type","payload","data","pending","fetch","then","json","toggleFav","id","item","getTitle","initialState","loadedData","penging","pendingMore","favIds","favs","title","rootReducer","combineReducers","results","state","action","concat","favorites","indexOf","filter","categories","debounce","func","delay","inDebounce","context","this","args","arguments","clearTimeout","setTimeout","apply","setLocalStr","ids","localStorage","setItem","JSON","stringify","connect","getPop","getTop","getAir","getByName","name","props","className","placeholder","onChange","document","getElementById","value","onClick","AnimeCard","children","more","getMoreRes","offset","getMore","addFav","getTit","useState","setOffset","useEffect","style","backgroundColor","margin","marginTop","map","key","color","attributes","canonicalTitle","to","src","posterImage","medium","alt","getLcStr","parse","getItem","getCat","class","categ","search","catName","titleId","pathname","split","pop","averageRating","popularityRank","ageRating","episodeCount","status","synopsis","exact","path","FavoritesList","store","createStore","applyMiddleware","logger","thunk","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0c7d9afa.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const queryParts = {\r\n    apiURL: 'https://kitsu.io/api/edge/anime?',\r\n    nameSearch: '&filter[text]=',\r\n    idSearch: '&filter[id]=',\r\n    topRated: '&sort=ratingRank',\r\n    mostPop: '&sort=popularityRank',\r\n    topAir: '&filter[status]=current&sort=popularityRank',\r\n    resultsNum: 12,\r\n    pageLim: '&page[limit]=',\r\n    pageOff: '&page[offset]=',\r\n    categories: 'https://kitsu.io/api/edge/categories?sort=-totalMediaCount&page[limit]=60&page[offset]=0',\r\n    filter: '&fields[anime]=id,posterImage,titles,canonicalTitle,averageRating,popularityRank,ageRating,episodeCount,status,synopsis',\r\n    categSearch: 'filter[categories]=',    \r\n    idFilter: 'https://kitsu.io/api/edge/anime?&filter[id]='\r\n}\r\n\r\nexport const apiEND = queryParts.pageLim + queryParts.resultsNum + queryParts.filter\r\n\r\nexport const sortTypes = {\r\n    byRating: 'topRated',\r\n    byPop: 'mostPop',\r\n    byTopAir: 'topAir'\r\n}\r\n\r\nexport const fetchHeader = {\r\n    method: 'GET',\r\n    headers: {\r\n        'Accept': 'application/vnd.api+json',\r\n        'Content-Type': 'application/vnd.api+json',\r\n    }\r\n}","import { queryParts, fetchHeader, apiEND } from './../constants';\r\n\r\nexport const GET_MORE = 'GET_MORE'\r\nexport const GET_CATEGORIES = 'GET_CATEGORIES'\r\nexport const TOGGLE_FAVORITE = 'TOGGLE_FAVORITE'\r\nexport const GET_FAV = 'GET_FAV'\r\nexport const GET_ANIME = 'GET_ANIME'\r\nexport const GET_TITLE = 'GET_TITLE'\r\nexport const GET_LOCAL_STR = 'GET_LOCAL_STR'\r\n\r\nexport const getAnime = (query) => {\r\n    const url = queryParts.apiURL + query + apiEND\r\n    return dispatch => {\r\n        dispatch({\r\n            type: GET_ANIME,\r\n            payload: {\r\n                data: [],\r\n                url: '',\r\n                pending: true\r\n            }\r\n        })\r\n        fetch(url, fetchHeader)\r\n            .then(data => data.json())\r\n            .then(json => dispatch({\r\n                type: GET_ANIME,\r\n                payload: {\r\n                    data: json.data,\r\n                    url: url,\r\n                    pending: false\r\n                }\r\n            }))\r\n    }\r\n}\r\n\r\nexport const getMore = (url, offset) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: GET_MORE,\r\n            payload: {\r\n                data: [],\r\n                url: '',\r\n                pendingMore: true\r\n            }\r\n        })\r\n        fetch(url + queryParts.pageOff + offset, fetchHeader)\r\n            .then(data => data.json())\r\n            .then(json => dispatch({\r\n                type: GET_MORE,\r\n                payload: {\r\n                    data: json.data,\r\n                    url: url,\r\n                    pendingMore: false\r\n                }\r\n            }))\r\n    }\r\n}\r\n\r\nexport const toggleFav = (id, item) => {\r\n    return {\r\n        type: TOGGLE_FAVORITE,\r\n        payload: {\r\n            id: id,\r\n            item: item\r\n        }\r\n    }\r\n}\r\n\r\nexport const getLocalStr = () => {\r\n    return {\r\n        type: GET_LOCAL_STR,\r\n        payload: {\r\n            favIds: JSON.parse(localStorage.getItem('ids')),\r\n            favs: JSON.parse(localStorage.getItem('favs'))\r\n        }\r\n    }\r\n}\r\n\r\nexport const getCateg = () => {\r\n    return dispatch => {\r\n        fetch(queryParts.categories)\r\n            .then(data => data.json())\r\n            .then(json => dispatch({\r\n                type: GET_CATEGORIES,\r\n                payload: json.data\r\n            }))\r\n    }\r\n}\r\n\r\nexport const getTitle = (id) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: GET_TITLE,\r\n            payload: {\r\n                id: id,\r\n                pending: true,\r\n                data: {},\r\n            }\r\n        })\r\n        fetch(queryParts.apiURL + queryParts.idSearch + id + queryParts.filter)\r\n            .then(data => data.json())\r\n            .then(json => dispatch({\r\n                type: GET_TITLE,\r\n                payload: {\r\n                    id: id,\r\n                    pending: false,\r\n                    data: json.data[0],\r\n                }\r\n            }))\r\n    }\r\n}","import { GET_MORE, GET_ANIME } from \"../actions/actions\"\r\n\r\nconst initialState = {\r\n    url: '',\r\n    loadedData: [],\r\n    penging: true,\r\n    pendingMore: false,\r\n}\r\n\r\nexport const fetcher = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case (GET_ANIME):\r\n            return (\r\n                {\r\n                    url: action.payload.url,\r\n                    loadedData: action.payload.data,\r\n                    pending: action.payload.pending\r\n                }\r\n            )\r\n        case (GET_MORE):\r\n            return (\r\n                {\r\n                    url: action.payload.url,\r\n                    loadedData: state.loadedData.concat(action.payload.data),\r\n                    pendingMore: action.payload.pendingMore\r\n                }\r\n            )\r\n        default:\r\n            return state\r\n    }\r\n}","\r\nimport { TOGGLE_FAVORITE, GET_LOCAL_STR } from './../actions/actions';\r\n\r\nconst initialState = {\r\n    favIds: [],\r\n    favs: []\r\n}\r\n\r\nexport const favorite = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case (TOGGLE_FAVORITE):\r\n            if (state.favIds.indexOf(action.payload.id) === -1) {\r\n                return {\r\n                    favIds: [...state.favIds, action.payload.id],\r\n                    favs: [...state.favs, action.payload.item]\r\n                }\r\n            }\r\n            else {\r\n                return {\r\n                    favIds: state.favIds.filter(id => id !== action.payload.id),\r\n                    favs: state.favs.filter(item => item.id !== action.payload.id)\r\n                }\r\n            }\r\n        case (GET_LOCAL_STR):\r\n            return (\r\n                {\r\n                    favIds: action.payload.favIds,\r\n                    favs: action.payload.favs\r\n                }\r\n            )\r\n        default:\r\n            return state\r\n    }\r\n}","import { GET_CATEGORIES } from \"../actions/actions\"\r\n\r\nconst initialState = []\r\n\r\nexport const CategoriesFetcher = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case (GET_CATEGORIES):\r\n            return (\r\n                action.payload\r\n            )\r\n        default:\r\n            return state\r\n    }\r\n}","import { GET_TITLE } from \"../actions/actions\"\r\n\r\nconst initialState = {\r\n    title: {},\r\n    pending: true,\r\n    id: '',\r\n}\r\n\r\nexport const TitleFetcher = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case(GET_TITLE):\r\n        return (            \r\n                 {\r\n                     id: action.payload.id,\r\n                     pending: action.payload.pending,\r\n                     title: action.payload.data\r\n                 }            \r\n        )\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { fetcher } from './Fetcher';\r\nimport { favorite } from './Favorite';\r\nimport { CategoriesFetcher } from './CategoriesFetcher';\r\nimport { TitleFetcher } from './TitleFetcher';\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    results: fetcher,\r\n    favorites: favorite,\r\n    categories: CategoriesFetcher,\r\n    title: TitleFetcher    \r\n})","export const debounce = (func, delay) => {\r\n  let inDebounce\r\n  return function () {\r\n    const context = this\r\n    const args = arguments\r\n    clearTimeout(inDebounce)\r\n    inDebounce = setTimeout(() => func.apply(context, args), delay)\r\n  }\r\n}\r\n\r\nexport const setLocalStr = (ids, favs) => {  \r\n  localStorage.setItem('ids', JSON.stringify(ids))\r\n  localStorage.setItem('favs', JSON.stringify(favs))\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getAnime } from './../../actions/actions';\r\nimport { queryParts } from './../../constants';\r\nimport { debounce } from './../../utility';\r\nimport './ButtonBar.css'\r\n\r\nfunction ButtonBar(props) {    \r\n\r\n    return (\r\n        <div className='ButtonBar' id='btnBar'>\r\n            <input type=\"text\" className='ButtonBar__input' id='search' placeholder='anime search' onChange={\r\n                debounce(\r\n                    () => {                        \r\n                        props.getByName(queryParts.nameSearch + document.getElementById('search').value)\r\n                    }, 1000)\r\n            } />        \r\n            <button className='ButtonBar__button' onClick={props.getPop}>Most Popular</button>\r\n            <button className='ButtonBar__button' onClick={props.getTop}>Top Rated</button>\r\n            <button className='ButtonBar__button' onClick={props.getAir}>Top Airing</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getPop: () => dispatch(getAnime(queryParts.mostPop)),\r\n        getTop: () => dispatch(getAnime(queryParts.topRated)),\r\n        getAir: () => dispatch(getAnime(queryParts.topAir)),\r\n        getByName: (name) => dispatch(getAnime(name))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(ButtonBar)","import React from 'react'\r\nimport './AnimeCard.css'\r\n\r\nexport default function AnimeCard(props) {\r\n    return (\r\n        <div className='AnimeCard'>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getMore, toggleFav } from '../../actions/actions'\r\nimport { useState } from 'react'\r\nimport AnimeCard from './AnimeCard';\r\nimport { setLocalStr } from '../../utility';\r\nimport { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { getTitle } from './../../actions/actions';\r\nimport './AnimeList.css'\r\n\r\nfunction AnimeList(props) {\r\n    const [offset, setOffset] = useState(10)\r\n    useEffect(() => setLocalStr(props.favIds, props.favorites))\r\n\r\n\r\n    return (\r\n        <div style={{backgroundColor: \"#001f3f\"}}>\r\n            <div className='AnimeList'>\r\n                {props.pending ?\r\n                    <div className=\"loader\" style={{ margin: 'auto', marginTop: '150px' }}></div> :\r\n                    props.results.map((item) =>\r\n                        <AnimeCard key={item.id} id={item.id}>\r\n                            <h3 className='AnimeCard__h3'>\r\n                                {props.favIds.indexOf(item.id) === -1 ?\r\n                                    <i className=\"far fa-star\" style={{color: 'yellow'}} onClick={() => {\r\n                                        props.addFav(item.id, item);\r\n\r\n                                    }\r\n                                    }></i> :\r\n                                    <i className=\"fas fa-star\" style={{color: 'yellow'}} onClick={() => {\r\n                                        props.addFav(item.id, item);\r\n\r\n                                    }\r\n                                    }></i>}\r\n                                {item.attributes.canonicalTitle}\r\n                            </h3>\r\n                            <Link to={'/SimpleAnimeSearch/' + item.id}>\r\n                                <img className='img' onClick={() => props.getTit(item.id)} src={item.attributes.posterImage.medium} alt=\"\" />\r\n                            </Link>\r\n                        </AnimeCard>\r\n                    )}\r\n\r\n            </div>\r\n            {\r\n                props.more ?\r\n                    <div className=\"loader\" style={{margin: 'auto'}}></div> :\r\n                    <button className='AnimeList__btn'\r\n                    style={{marginTop: '150px' }}\r\n                     onClick={\r\n                        () => {\r\n                            setOffset(offset + 10);\r\n                            props.getMoreRes(props.url, offset);\r\n                        }\r\n                    }>Show More</button>\r\n            }</div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        results: [...state.results.loadedData],\r\n        url: state.results.url,\r\n        favorites: [...state.favorites.favs],\r\n        favIds: [...state.favorites.favIds],\r\n        pending: state.results.pending,\r\n        more: state.results.pendingMore,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getMoreRes: (url, offset) => dispatch(getMore(url, offset)),\r\n        addFav: (id, item) => dispatch(toggleFav(id, item)),\r\n        getTit: (id) => dispatch(getTitle(id))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AnimeList)    \r\n","import React, { useEffect } from 'react'\r\nimport { toggleFav, getTitle } from './../../actions/actions';\r\nimport { connect } from 'react-redux';\r\nimport { setLocalStr } from '../../utility';\r\nimport { Link } from 'react-router-dom';\r\nimport './Favs.css'\r\n\r\nfunction FavoriresList(props) {\r\n    useEffect(() => setLocalStr(props.favIds, props.favorites))\r\n\r\n    return (\r\n        <div className='Favs'>\r\n            {props.favorites.map((item) =>\r\n                <div className='Favs__card'  key={item.id}>\r\n                    <i className=\"fas fa-star\" style={{ color: 'yellow' }} onClick={() => {\r\n                        props.toggleFav(item.id, item)\r\n                    }\r\n                    }></i>\r\n                    <Link className='Favs__card__link' to={'/SimpleAnimeSearch/' + item.id}>\r\n                        <h3 className='cardH' onClick={() => props.getTit(item.id)}>\r\n                            {item.attributes.canonicalTitle}\r\n                        </h3>\r\n                    </Link>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        favorites: [...state.favorites.favs],\r\n        favIds: [...state.favorites.favIds]\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        toggleFav: (id) => dispatch(toggleFav(id)),\r\n        getTit: (id) => dispatch(getTitle(id))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FavoriresList)","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { getAnime, getLocalStr, getCateg } from './../actions/actions';\r\nimport { queryParts } from './../constants';\r\nimport './Header.css'\r\n\r\nfunction Header(props) {\r\n    useEffect(() => {\r\n        (props.getPop());\r\n        (props.getCat());\r\n        if (localStorage.getItem('ids') && localStorage.getItem('favs')) {\r\n            props.getLcStr()\r\n        }\r\n    }, [props])\r\n\r\n    const handleHide = () => {\r\n        if (document.getElementById('nav').className === 'header__nav') {\r\n            document.getElementById('nav').className = 'header__nav--responsive'\r\n        }\r\n        else {\r\n            document.getElementById('nav').className = 'header__nav'\r\n        }\r\n        if (document.getElementById('btnBar') && document.getElementById('btnBar').className === 'ButtonBar') {\r\n            document.getElementById('btnBar').className = 'ButtonBar--responsive'\r\n            document.getElementById('nav').className = 'header__nav--responsive'\r\n        }\r\n        else if(document.getElementById('btnBar') && document.getElementById('btnBar').className === 'ButtonBar--responsive') {\r\n            document.getElementById('btnBar').className = 'ButtonBar'\r\n            document.getElementById('nav').className = 'header__nav'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='header'>\r\n            <h3 className='header__h3'>Simple Anime Search\r\n            <i class=\"fas fa-bars\" id='bars' onClick={handleHide}></i>\r\n            </h3>\r\n            <nav className='header__nav' id='nav'>\r\n                <Link className='header__nav__Link' to='/SimpleAnimeSearch'>Discover Anime</Link>\r\n                <Link className='header__nav__Link' to='/SimpleAnimeSearch/categories'>Browse popular categories</Link>\r\n                <Link className='header__nav__Link' to='/SimpleAnimeSearch/favorites'>Favorites</Link>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getPop: () => dispatch(getAnime(queryParts.mostPop)),\r\n        getLcStr: () => dispatch(getLocalStr()),\r\n        getCat: () => dispatch(getCateg())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Header)\r\n","import React from 'react'\r\nimport { getAnime } from './../../actions/actions';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { queryParts } from './../../constants';\r\nimport './Categories.css'\r\n\r\nfunction Categories(props) {\r\n    return (\r\n        <div className=\"Cats\">\r\n            {props.categ.map(item =>\r\n                <Link className='Cats__link'  key={item.id} to='/SimpleAnimeSearch'\r\n                    onClick={\r\n                        () => props.search(queryParts.categSearch + item.attributes.title + queryParts.mostPop)}>\r\n                    {item.attributes.title}</Link>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        categ: state.categories,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        search: (catName) => dispatch(getAnime(catName))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories)","import React from 'react'\r\nimport { toggleFav, getTitle } from './../actions/actions';\r\nimport { connect } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { setLocalStr } from '../utility';\r\nimport './Title.css'\r\n\r\nfunction Title(props) {\r\n    useEffect(() => setLocalStr(props.favIds, props.favorites))\r\n    useEffect(() => {\r\n        if (!props.titleId) {\r\n            let id = window.location.pathname.split('/').pop()\r\n            props.getTit(id)\r\n        }\r\n    }, [props])\r\n\r\n    return (\r\n        <div className='TitleBox'>\r\n            {props.pending ?\r\n                <div className=\"loader\" style={{ margin: 'auto', marginTop: '150px' }}></div> :\r\n                <div className='TitleBox__info'>\r\n                    <img className='TitleBox__info__img' src={props.title.attributes.posterImage.medium} alt=\"\" />\r\n                    <div className='TitleBox__info__text'>\r\n                        <h3 className='cardH'>\r\n                            {props.favIds.indexOf(props.title.id) === -1 ?\r\n                                <i className=\"far fa-star\" style={{color: 'yellow'}} onClick={() => {\r\n                                    props.addFav(props.title.id, props.title);\r\n\r\n                                }\r\n                                }></i> :\r\n                                <i className=\"fas fa-star\" style={{color: 'yellow'}} onClick={() => {\r\n                                    props.addFav(props.title.id, props.title);\r\n\r\n                                }\r\n                                }></i>}\r\n                            {props.title.attributes.canonicalTitle}\r\n                        </h3>\r\n                        <p>\r\n                            Avrage Rating:   {props.title.attributes.averageRating}\r\n                        </p>\r\n                        <p>\r\n                            Popularity rank: {props.title.attributes.popularityRank}\r\n                        </p>\r\n                        <p>\r\n                            Age rating: {props.title.attributes.ageRating}\r\n                        </p>\r\n                        <p>\r\n                            Number of episodes: {props.title.attributes.episodeCount}\r\n                        </p>\r\n                        <p>\r\n                            Status: {props.title.attributes.status}\r\n                        </p>\r\n\r\n                        <p className='descHide' id={props.title.id + 'desc'}>\r\n                            Synopsis:\r\n                        </p>\r\n                        <p>{props.title.attributes.synopsis}</p>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        title: state.title.title,\r\n        favorites: [...state.favorites.favs],\r\n        favIds: [...state.favorites.favIds],\r\n        pending: state.title.pending,\r\n        titleId: state.title.id,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addFav: (id, item) => dispatch(toggleFav(id, item)),\r\n        getTit: (id) => dispatch(getTitle(id))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Title)","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport ButtonBar from './ButtonBar/ButtonBar';\r\nimport AnimeList from './List/AnimeList';\r\nimport FavoritesList from './List/FavoritesList';\r\nimport Header from './Header';\r\nimport Categories from './List/Categories';\r\nimport Title from './Title';\r\nimport { connect } from 'react-redux';\r\nimport './Main.css'\r\n\r\n\r\nfunction Main(props) {\r\n  return (\r\n    <div className=\"main\">\r\n      <BrowserRouter>\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path='/SimpleAnimeSearch'>\r\n            <ButtonBar />\r\n            <AnimeList />\r\n          </Route>\r\n          <Route exact path='/SimpleAnimeSearch/favorites'>\r\n            <FavoritesList />\r\n          </Route>\r\n          <Route exact path='/SimpleAnimeSearch/categories'>\r\n            <Categories />\r\n          </Route>\r\n          <Route path={'/SimpleAnimeSearch/' + props.titleId}>\r\n            <Title />\r\n          </Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n      titleId: state.title.id,      \r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Main)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport { rootReducer } from './reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport Main from './Components/Main';\n\nconst store = createStore(rootReducer, applyMiddleware(logger, thunk))\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n     <Main />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}